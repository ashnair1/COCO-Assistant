version: 2.1
orbs:
  snyk: snyk/snyk@0.0.13
jobs:
  test_coco_assistant:
    working_directory: ~/project
    docker:
      - image: circleci/python:3.6.6
    steps:
      - checkout
      # - restore_cache:
      #    key: coco-{{ .Branch }}
      - run:
          name: Setup environment
          command: |
            sudo chown -R circleci:circleci /usr/local/
            python -m pip install --upgrade pip
            python -m pip install Cython numpy
            python -m pip install -r requirements-dev.txt
      # - save_cache:
      #     key: coco-{{ .Branch }}
      #     paths:
      #       - "/home/circleci/.cache/pip"
      - snyk/scan
      - run:
          name: Runnning tests
          command: |
            make remove && sudo make clean
            mkdir test-results
            pytest --junitxml=test-results/junit.xml tests/tests.py
            coverage run tests/tests.py
            coverage report -m
            coverage html && coverage xml
            python-codacy-coverage -r coverage.xml
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: coverage

  deploy:
    working_directory: ~/project
    docker:
      - image: circleci/python:3.6.6
    steps:
      - checkout
      - run:
          name: Setup environment
          command: |
            sudo chown -R circleci:circleci /usr/local/
            python -m pip install --upgrade pip
            python -m pip install twine

      - run:
          name: Verify git tag vs version
          command: |
            python setup.py verify

      - run:
          name: Init .pypirc
          command: |
            echo -e "[testpypi]" >> ~/.pypirc
            echo -e "username = ashnair1" >> ~/.pypirc
            echo -e "password = $TEST_PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: Build and upload to PyPI
          command: |
            python setup.py sdist bdist_wheel
            twine upload dist/*



workflows:
  version: 2.1
  build_test:
    jobs:
      - test_coco_assistant:
           filters:
              branches:
                  only:
                     - master
                     - deploy
  build_deploy:
    jobs:
      - test_coco_assistant:
            filters:
              tags:
                only: /[0-9]+(\.[0-9]+)*/
              branches:
                ignore: /.*/
      - deploy:
            requires:
              - test_coco_assistant
            filters:
              tags:
                only: /[0-9]+(\.[0-9]+)*/
              branches:
                ignore: /.*/


